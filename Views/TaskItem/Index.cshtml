@model List<TaskItem>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ReadyTaskUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);

    <h2>Tasks</h2>
    if (UserManager.IsInRoleAsync(user, "Admin").Result ||
        UserManager.IsInRoleAsync(user, "Manager").Result)
    {
        <a asp-action="Create">Create Task</a>
    }

    <br />

    <div class="row">
        <div class="col-md-9">
            @if (Model.Count() > 0)
            {
                <table class="table table-hover task-list">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Priority</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (TaskItem task in Model)
                        {
                            <tr class="@Enum.GetName(typeof(TaskItemStatus), task.StatusId)" onclick="location.href='@Url.Action("Details", "TaskItem", new { Id = task.Id })'">
                                <td>
                                    @task.Title
                                </td>
                                <td>@task.Description</td>
                                <td>@Enum.GetName(typeof(TaskItemPriority), task.PriorityId)</td>

                            </tr>

                        }
                    </tbody>

                </table>

            }
            else
            {
                <h3 class="">No tasks exist...</h3>
            }
        </div>

        <div class="col-md-3">
            <form method="post">
                <div class="form-group">
                    <label>Search</label>
                    <input type="text" class="form-control" name="filters.search" value="@ViewBag.filters?.Search"/>
                </div>
                
                <div class="form-group">

                    @if (String.IsNullOrEmpty(ViewBag.filters?.Status))
                    {
                        <label>
                            <input type="radio" checked name="filters.status" value="" />
                            any
                        </label>
                    }
                    else
                    {
                        <label>
                            <input type="radio" name="filters.status" value="" />
                            any
                        </label>
                    }

                    @foreach (var status in Enum.GetValues(typeof(TaskItemStatus)))
                    {
                        if (status.ToString() == ViewBag.filters?.Status)
                        {
                            <label>
                                <input type="radio" checked name="filters.status" value="@status" />
                                @status
                            </label>
                        }
                        else
                        {
                            <label>
                                <input type="radio" name="filters.status" value="@status" />
                                @status
                            </label>
                        }

                    }
                </div>


                <button type="submit" class="btn btn-default">Filter</button>
            </form>
        </div>
    </div>
    

}